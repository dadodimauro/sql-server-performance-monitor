------------------------------------------------------------------------------
-- SETUP SCRIPT
------------------------------------------------------------------------------

--which database do you want this to be created?
use [awr_test]
go


-- setup objects:
-- HEADER TABLE WITH TIMESTAMPS
if object_id('[dbo].[sql_perf_mon_snapshot_header]') is null
	begin
		create table [dbo].[sql_perf_mon_snapshot_header] (
			[snapshot_time] datetime primary key
			)
	end
go

/*
if object_id('[dbo].[sql_perf_mon_config_who_is_active_age]') is null
	begin
		create table [dbo].[sql_perf_mon_config_who_is_active_age] (
			[seconds] tinyint primary key
		)
		insert into [dbo].[sql_perf_mon_config_who_is_active_age]
		select 60
	end
*/

-- LIST OF ALL DATABASES ON THE SERVER
if object_id('[dbo].[sql_perf_mon_database]') is null
	begin
		create table [dbo].[sql_perf_mon_database] (
			[database_name] sysname primary key
		)
	insert into [dbo].[sql_perf_mon_database]
	select name from sys.Databases
	union all
	select 'mssqlsystemresource'
	end


if object_id('[dbo].[sql_perf_mon_server]') is null
	begin
		create table [dbo].[sql_perf_mon_server] (
			[physical_name] sysname,
			[servername] sysname,
			[service_name] sysname,
			[local_net_address] varchar(50),
			[local_tcp_port] varchar(50)
			)

	insert into dbo.sql_perf_mon_server
	select convert(sysname,SERVERPROPERTY('ComputerNamePhysicalNetBIOS'))
		, convert(sysname,@@SERVERNAME), convert(sysname,@@SERVICENAME), convert(varchar(50),local_net_address), convert(varchar(50),local_tcp_port)
	FROM sys.dm_exec_connections WHERE session_id = @@spid
	end
go

-- FILE STATS TABLE
if object_id('[dbo].[sql_perf_mon_file_stats]') is null
	begin
		create table [dbo].[sql_perf_mon_file_stats](
			[database_name] nvarchar(128) not null,
			[logical_file_name] sysname not null,
			[type_desc] nvarchar(60) not null,
			[logical_disk] varchar(255) not null,
			[num_of_reads] bigint not null,
			[num_of_bytes_read] bigint not null,
			[io_stall_read_ms] bigint not null,
			[num_of_writes] bigint not null,
			[num_of_bytes_written] bigint not null,
			[io_stall_write_ms] bigint not null,
			[size_on_disk_bytes] bigint not null,
			[snapshot_time] datetime foreign key references [dbo].[sql_perf_mon_snapshot_header]([snapshot_time]) on delete cascade not null,
			constraint pk_sql_perf_mon_file_stats primary key clustered (
				[snapshot_time], [database_name], [logical_file_name], [type_desc]
			)
		)
	end
go

-- MEMORY STATS TABLE
if object_id('[dbo].[sql_perf_mon_os_memory_clerks]') is null
	begin
		create table [dbo].[sql_perf_mon_os_memory_clerks] (
			[snapshot_time] datetime foreign key references [dbo].[sql_perf_mon_snapshot_header]([snapshot_time]) on delete cascade not null,
			[total_kb] bigint,
			[allocated_kb] bigint,
			[total_kb_all_clerks] bigint,
			[clerk_name] varchar(255),
			[memory_available] int,
			constraint [pk_sql_perf_mon_os_memory_clerks] primary key (
				[snapshot_time], [clerk_name]
				)
			)
	end
go

-- WAIT STATS TABLE
if object_id('[dbo].[sql_perf_mon_wait_stats]') is null
	begin
		create table [dbo].[sql_perf_mon_wait_stats](
			[wait_type] nvarchar(60) not null,
			[waiting_tasks_count] bigint not null,
			[wait_time_ms] bigint not null,
			[max_wait_time_ms] bigint not null,
			[signal_wait_time_ms] bigint not null,
			[snapshot_time] datetime foreign key references [dbo].[sql_perf_mon_snapshot_header]([snapshot_time]) on delete cascade not null,
			constraint [pk_sql_perf_mon_wait_stats] primary key (
				[snapshot_time] asc, [wait_type] asc
				)
		)
	end
go

-- SYSTEM PERFORMANCE COUNTERS
if object_id('[dbo].[sql_perf_mon_perf_counters]') is null
	begin
		create table [dbo].[sql_perf_mon_perf_counters](
			[object_name] varchar(128) not null,  -- changed from 4000 to avoid key too long
			[instance_name] varchar(128) not null,  -- changed from 4000 to avoid key too long
			[counter_name] varchar(512) not null,  -- changed from 4000 to avoid key too long
			[cntr_value] bigint not null,
			[base_cntr_value] bigint null,
			[cntr_type] bigint not null,
			[snapshot_time] datetime foreign key references [dbo].[sql_perf_mon_snapshot_header]([snapshot_time]) on delete cascade not null,
			constraint [pk_sql_perf_mon_perf_counters] primary key ([snapshot_time] asc, [object_name] asc, [counter_name] asc, [instance_name] asc)
		)
	end
go

/*
--migrate old and unused tables
if object_id('[dbo].[sql_perf_mon_who_is_active]') is not null
	begin
		if (select count(*) from [dbo].[sql_perf_mon_who_is_active]) = 0
			begin
				drop table [dbo].[sql_perf_mon_who_is_active]
			end
	end

if object_id('[dbo].[sql_perf_mon_who_is_active]') is null
	begin
		--schema generated by sp_who_is_active output:
		create table [dbo].[sql_perf_mon_who_is_active] ([snapshot_time] datetime foreign key references [dbo].[sql_perf_mon_snapshot_header]([snapshot_time]) on delete cascade not null,[start_time] datetime NOT NULL,[session_id] smallint NOT NULL,[status] varchar(30) NOT NULL,[percent_complete] varchar(30) NULL,[host_name] nvarchar(128) NULL,[database_name] nvarchar(128) NULL,[program_name] nvarchar(128) NULL,[sql_text] xml NULL,[sql_command] xml NULL,[login_name] nvarchar(128) NOT NULL,[open_tran_count] varchar(30) NULL,[wait_info] nvarchar(4000) NULL,[blocking_session_id] smallint NULL,[blocked_session_count] varchar(30) NULL,[CPU] varchar(30) NULL,[used_memory] varchar(30) NULL,[tempdb_current] varchar(30) NULL,[tempdb_allocations] varchar(30) NULL,[reads] varchar(30) NULL,[writes] varchar(30) NULL,[physical_reads] varchar(30) NULL,[login_time] datetime NULL)
		create nonclustered index idx_whoisactive on [dbo].[sql_perf_mon_who_is_active] ([snapshot_time])
	end

if object_id('[dbo].[sql_perf_mon_who_is_active_tmp]') is not null
	begin
		drop table [dbo].[sql_perf_mon_who_is_active_tmp]
	end

if object_id('[dbo].[sql_perf_mon_who_is_active_tmp]') is null
	begin
		--schema generated by sp_who_is_active output:
		create table [dbo].[sql_perf_mon_who_is_active_tmp] ([snapshot_time] datetime not null,[start_time] datetime NOT NULL,[session_id] smallint NOT NULL,[status] varchar(30) NOT NULL,[percent_complete] varchar(30) NULL,[host_name] nvarchar(128) NULL,[database_name] nvarchar(128) NULL,[program_name] nvarchar(128) NULL,[sql_text] xml NULL,[sql_command] xml NULL,[login_name] nvarchar(128) NOT NULL,[open_tran_count] varchar(30) NULL,[wait_info] nvarchar(4000) NULL,[blocking_session_id] smallint NULL,[blocked_session_count] varchar(30) NULL,[CPU] varchar(30) NULL,[used_memory] varchar(30) NULL,[tempdb_current] varchar(30) NULL,[tempdb_allocations] varchar(30) NULL,[reads] varchar(30) NULL,[writes] varchar(30) NULL,[physical_reads] varchar(30) NULL,[login_time] datetime NULL)
	end
*/



------------------------------------------------------------------------------
-- the next 2 LONG queries are needed to set which metrics to use
-- for the os metrics and waits
------------------------------------------------------------------------------

if object_id('[dbo].[sql_perf_mon_config_perf_counters]') is null
	begin
		--create table to hold performance counters to collect.
		--the collection "on/off" switch is the [collect] column. 1= collect, 0= do not collect
		create table [dbo].[sql_perf_mon_config_perf_counters]
		(
			[object_name] nvarchar(128) not null,  -- all reduced to avoid problem with clustered index
			[instance_name] nvarchar(128) not null,
			[counter_name] nvarchar(128) not null,
			[base_counter_name] nvarchar(128) null,
			[collect] bit null,
			constraint pk_sql_perf_mon_config_perf_counters primary key (
				[object_name] , [instance_name], [counter_name]
			)
		);
		create nonclustered index idx_sql_perf_mon_perf_counters_types on dbo.[sql_perf_mon_config_perf_counters] ([collect]) include ([object_name],[instance_name],[counter_name],[base_counter_name])

		/* based on https://blogs.msdn.microsoft.com/dfurman/2015/04/02/collecting-performance-counter-values-from-a-sql-azure-database/ */
		insert into dbo.sql_perf_mon_config_perf_counters([collect],[object_name],[counter_name], [instance_name],[base_counter_name])
		values
			 (0,'Access Methods','Forwarded Records/sec','',NULL)
			,(1,'Access Methods','Full Scans/sec','',NULL)
			,(1,'Access Methods','Page Splits/sec','',NULL)
			,(1,'Access Methods','Pages Allocated/sec','',NULL)
			,(0,'Access Methods','Table Lock Escalations/sec','',NULL)
			,(1,'Access Methods','Index Searches/sec','',NULL)
			,(1,'Access Methods','Page Deallocations/sec','',NULL)
			,(1,'Access Methods','Page compression attempts/sec','',NULL)
			,(1,'Access Methods','Pages compressed/sec','',NULL)
			,(0,'Availability Replica','Bytes Received from Replica/sec','_Total',NULL)
			,(0,'Availability Replica','Bytes Sent to Replica/sec','_Total',NULL)
			,(0,'Batch Resp Statistics','Batches >=000000ms & <000001ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000001ms & <000002ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000002ms & <000005ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000005ms & <000010ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000010ms & <000020ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000020ms & <000050ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000050ms & <000100ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000100ms & <000200ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000200ms & <000500ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000500ms & <001000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=001000ms & <002000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=002000ms & <005000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=005000ms & <010000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=010000ms & <020000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=020000ms & <050000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=050000ms & <100000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=100000ms','CPU Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000000ms & <000001ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000001ms & <000002ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000002ms & <000005ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000005ms & <000010ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000010ms & <000020ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000020ms & <000050ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000050ms & <000100ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000100ms & <000200ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000200ms & <000500ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000500ms & <001000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=001000ms & <002000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=002000ms & <005000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=005000ms & <010000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=010000ms & <020000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=020000ms & <050000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=050000ms & <100000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=100000ms','CPU Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000010ms & <000020ms','Elappsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000000ms & <000001ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000001ms & <000002ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000002ms & <000005ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000005ms & <000010ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000020ms & <000050ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000050ms & <000100ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000100ms & <000200ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000200ms & <000500ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000500ms & <001000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=001000ms & <002000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=002000ms & <005000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=005000ms & <010000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=010000ms & <020000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=020000ms & <050000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=050000ms & <100000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=100000ms','Elapsed Time:Requests',NULL)
			,(0,'Batch Resp Statistics','Batches >=000000ms & <000001ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000001ms & <000002ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000002ms & <000005ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000005ms & <000010ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000010ms & <000020ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000020ms & <000050ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000050ms & <000100ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000100ms & <000200ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000200ms & <000500ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=000500ms & <001000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=001000ms & <002000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=002000ms & <005000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=005000ms & <010000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=010000ms & <020000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=020000ms & <050000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=050000ms & <100000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Batch Resp Statistics','Batches >=100000ms','Elapsed Time:Total(ms)',NULL)
			,(0,'Buffer Manager','Background writer pages/sec','',NULL)
			,(1,'Buffer Manager','Buffer cache hit ratio','','Buffer cache hit ratio base ')
			,(1,'Buffer Manager','Buffer cache hit ratio base','',NULL)
			,(1,'Buffer Manager','Checkpoint pages/sec','',NULL)
			,(1,'Buffer Manager','Lazy writes/sec','',NULL)
			,(1,'Buffer Manager','Page reads/sec','',NULL)
			,(1,'Buffer Manager','Readahead pages/sec','',NULL)
			,(1,'Buffer Manager','Page lookups/sec','',NULL)
			,(1,'Buffer Manager','Workfiles Created/sec','',NULL)
			,(1,'Buffer Manager','Worktables Created/sec','',NULL)
			,(1,'Buffer Manager','Free list stalls/sec','',NULL)
			,(1,'Buffer Manager','Page writes/sec','',NULL)
			,(1,'Buffer Node','Page life expectancy','000',NULL)
			,(0,'Database Replica','File Bytes Received/sec','_Total',NULL)
			,(0,'Database Replica','Log Bytes Received/sec','_Total',NULL)
			,(0,'Database Replica','Log remaining for undo','_Total',NULL)
			,(0,'Database Replica','Log Send Queue','_Total',NULL)
			,(0,'Database Replica','Mirrored Write Transactions/sec','_Total',NULL)
			,(0,'Database Replica','Recovery Queue','_Total',NULL)
			,(0,'Database Replica','Redo blocked/sec','_Total',NULL)
			,(0,'Database Replica','Redo Bytes Remaining','_Total',NULL)
			,(0,'Database Replica','Redone Bytes/sec','_Total',NULL)
			,(0,'Database Replica','Total Log requiring undo','_Total',NULL)
			,(0,'Database Replica','Transaction Delay','_Total',NULL)
			,(0,'Databases','Checkpoint duration','_Total',NULL)
			,(0,'Databases','Group Commit Time/sec','_Total',NULL)
			,(0,'Databases','Log Bytes Flushed/sec','_Total',NULL)
			,(0,'Databases','Log Flush Waits/sec','_Total',NULL)
			,(1,'Databases','Log Flushes/sec','_Total',NULL)
			,(1,'Databases','Log Growths','_Total',NULL)
			,(0,'Databases','Percent Log Used','<* !_Total>',NULL)
			,(1,'Databases','Transactions/sec','<* !_Total>',NULL)
			,(1,'Databases','Write Transactions/sec','_Total',NULL)
			,(1,'Databases','Active Transactions','_Total',NULL)
			,(1,'Databases','Log Truncations','_Total',NULL)
			,(1,'Databases','Log Shrinks','_Total',NULL)
			,(0,'Databases','Checkpoint duration','tempdb',NULL)
			,(0,'Databases','Group Commit Time/sec','tempdb',NULL)
			,(0,'Databases','Log Bytes Flushed/sec','tempdb',NULL)
			,(0,'Databases','Log Flush Waits/sec','tempdb',NULL)
			,(0,'Databases','Log Flushes/sec','tempdb',NULL)
			,(0,'Databases','Log Growths','tempdb',NULL)
			,(0,'Databases','Percent Log Used','tempdb',NULL)
			,(0,'Databases','Transactions/sec','tempdb',NULL)
			,(0,'Databases','Write Transactions/sec','tempdb',NULL)
			,(1,'General Statistics','Active Temp Tables','',NULL)
			,(0,'General Statistics','Logical Connections','',NULL)
			,(1,'General Statistics','Logins/sec','',NULL)
			,(0,'General Statistics','Logouts/sec','',NULL)
			,(1,'General Statistics','Processes blocked','',NULL)
			,(1,'General Statistics','User Connections','',NULL)
			,(1,'General Statistics','Temp Tables Creation Rate','',NULL)
			,(0,'HTTP Storage','Avg. Bytes/Read','<* !_Total>','Avg. Bytes/Read BASE ')
			,(0,'HTTP Storage','Avg. Bytes/Read BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. Bytes/Transfer','<* !_Total>','Avg. Bytes/Transfer BASE ')
			,(0,'HTTP Storage','Avg. Bytes/Transfer BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. Bytes/Write','<* !_Total>','Avg. Bytes/Write BASE ')
			,(0,'HTTP Storage','Avg. Bytes/Write BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. microsec/Read','<* !_Total>','Avg. microsec/Read BASE ')
			,(0,'HTTP Storage','Avg. microsec/Read BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. microsec/Read Comp','<* !_Total>','Avg. microsec/Read Comp BASE ')
			,(0,'HTTP Storage','Avg. microsec/Read Comp BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. microsec/Transfer','<* !_Total>','Avg. microsec/Transfer BASE ')
			,(0,'HTTP Storage','Avg. microsec/Transfer BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. microsec/Write','<* !_Total>','Avg. microsec/Write BASE ')
			,(0,'HTTP Storage','Avg. microsec/Write BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','Avg. microsec/Write Comp','<* !_Total>','Avg. microsec/Write Comp BASE ')
			,(0,'HTTP Storage','Avg. microsec/Write Comp BASE','<* !_Total>',NULL)
			,(0,'HTTP Storage','HTTP Storage IO failed/sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','HTTP Storage IO retry/sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Outstanding HTTP Storage IO','<* !_Total>',NULL)
			,(0,'HTTP Storage','Read Bytes/Sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Reads/Sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Total Bytes/Sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Transfers/Sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Write Bytes/Sec','<* !_Total>',NULL)
			,(0,'HTTP Storage','Writes/Sec','<* !_Total>',NULL)
			,(1,'Latches','Latch Waits/sec','',NULL)
			,(1,'Locks','Average Wait Time (ms)','_Total','Average Wait Time Base ')
			,(1,'Locks','Average Wait Time Base','_Total',NULL)
			,(0,'Locks','Lock Timeouts (timeout > 0)/sec','_Total',NULL)
			,(1,'Locks','Number of Deadlocks/sec','_Total',NULL)
			,(1,'Locks','Lock Requests/sec','_Total',NULL)
			,(1,'Locks','Lock Waits/sec','_Total',NULL)
			,(1,'Locks','Lock Timeouts/sec','_Total',NULL)
			,(1,'Memory Manager','Memory Grants Outstanding','',NULL)
			,(1,'Memory Manager','Memory Grants Pending','',NULL)
			,(1,'Memory Manager','SQL Cache Memory (KB)','',NULL)
			,(1,'Memory Manager','Stolen Server Memory (KB)','',NULL)
			,(1,'Memory Manager','Target Server Memory (KB)','',NULL)
			,(1,'Memory Manager','Total Server Memory (KB)','',NULL)
			,(1,'Memory Manager','Connection Memory (KB)','',NULL)
			,(1,'Memory Manager','Lock Memory (KB)','',NULL)
			,(1,'Memory Manager','Optimizer Memory (KB)','',NULL)
			,(0,'Plan Cache','Cache Hit Ratio','_Total','Cache Hit Ratio Base ')
			,(0,'Plan Cache','Cache Hit Ratio Base','_Total',NULL)
			,(0,'Plan Cache','Cache Object Counts','_Total',NULL)
			,(0,'Resource Pool Stats','Active memory grant amount (KB)','internal',NULL)
			,(0,'Resource Pool Stats','Active memory grants count','internal',NULL)
			,(0,'Resource Pool Stats','Avg Disk Read IO (ms)','internal','Avg Disk Read IO (ms) Base ')
			,(0,'Resource Pool Stats','Avg Disk Read IO (ms) Base','internal',NULL)
			,(0,'Resource Pool Stats','Avg Disk Write IO (ms)','internal','Avg Disk Write IO (ms) Base ')
			,(0,'Resource Pool Stats','Avg Disk Write IO (ms) Base','internal',NULL)
			,(0,'Resource Pool Stats','Cache memory target (KB)','internal',NULL)
			,(0,'Resource Pool Stats','Compile memory target (KB)','internal',NULL)
			,(0,'Resource Pool Stats','CPU control effect %','internal',NULL)
			,(0,'Resource Pool Stats','CPU delayed %','internal','CPU delayed % base ')
			,(0,'Resource Pool Stats','CPU delayed % base','internal',NULL)
			,(0,'Resource Pool Stats','CPU effective %','internal','CPU effective % base ')
			,(0,'Resource Pool Stats','CPU effective % base','internal',NULL)
			,(0,'Resource Pool Stats','CPU usage %','internal','CPU usage % base ')
			,(0,'Resource Pool Stats','CPU usage % base','internal',NULL)
			,(0,'Resource Pool Stats','CPU usage target %','internal',NULL)
			,(0,'Resource Pool Stats','CPU violated %','internal',NULL)
			,(0,'Resource Pool Stats','Disk Read Bytes/sec','internal',NULL)
			,(0,'Resource Pool Stats','Disk Read IO Throttled/sec','internal',NULL)
			,(0,'Resource Pool Stats','Disk Read IO/sec','internal',NULL)
			,(0,'Resource Pool Stats','Disk Write Bytes/sec','internal',NULL)
			,(0,'Resource Pool Stats','Disk Write IO Throttled/sec','internal',NULL)
			,(0,'Resource Pool Stats','Disk Write IO/sec','internal',NULL)
			,(0,'Resource Pool Stats','Max memory (KB)','internal',NULL)
			,(0,'Resource Pool Stats','Memory grant timeouts/sec','internal',NULL)
			,(0,'Resource Pool Stats','Memory grants/sec','internal',NULL)
			,(0,'Resource Pool Stats','Pending memory grants count','internal',NULL)
			,(0,'Resource Pool Stats','Query exec memory target (KB)','internal',NULL)
			,(0,'Resource Pool Stats','Target memory (KB)','internal',NULL)
			,(0,'Resource Pool Stats','Used memory (KB)','internal',NULL)
			,(1,'SQL Errors','Errors/sec','_Total',NULL)
			,(0,'SQL Errors','Errors/sec','DB Offline Errors',NULL)
			,(0,'SQL Errors','Errors/sec','Kill Connection Errors',NULL)
			,(0,'SQL Errors','Errors/sec','User Errors',NULL)
			,(1,'SQL Statistics','Batch Requests/sec','',NULL)
			,(1,'SQL Statistics','Failed Auto-Params/sec','',NULL)
			,(0,'SQL Statistics','SQL Attention rate','',NULL)
			,(1,'SQL Statistics','SQL Compilations/sec','',NULL)
			,(1,'SQL Statistics','SQL Re-Compilations/sec','',NULL)
			,(1,'SQL Statistics','Forced Parameterizations/sec','',NULL)
			,(1,'SQL Statistics','Auto-Param Attempts/sec','',NULL)
			,(0,'Transactions','Longest Transaction Running Time','',NULL)
			,(0,'Transactions','Version Cleanup rate (KB/s)','',NULL)
			,(0,'Transactions','Version Generation rate (KB/s)','',NULL)
			,(1,'Transactions','Free Space in tempdb (KB)','',NULL)
			,(1,'Wait Statistics','Log write waits','Average wait time (ms)',NULL)
			,(1,'Wait Statistics','Network IO waits','Average wait time (ms)',NULL)
			,(1,'Wait Statistics','Page IO latch waits','Average wait time (ms)',NULL)
			,(1,'Wait Statistics','Page latch waits','Average wait time (ms)',NULL)
			,(0,'Wait Statistics','Lock waits','Cumulative wait time (ms) per second',NULL)
			,(0,'Wait Statistics','Memory grant queue waits','Cumulative wait time (ms) per second',NULL)
			,(0,'Wait Statistics','Network IO waits','Cumulative wait time (ms) per second',NULL)
			,(0,'Wait Statistics','Non-Page latch waits','Cumulative wait time (ms) per second',NULL)
			,(1,'Wait Statistics','Page IO latch waits','Cumulative wait time (ms) per second',NULL)
			,(1,'Wait Statistics','Page latch waits','Cumulative wait time (ms) per second',NULL)
			,(0,'Wait Statistics','Wait for the worker','Cumulative wait time (ms) per second',NULL)
			,(0,'Workload Group Stats','Active parallel threads','internal',NULL)
			,(0,'Workload Group Stats','Active requests','internal',NULL)
			,(0,'Workload Group Stats','Avg Disk msec/Read','internal','Disk msec/Read Base ')
			,(0,'Workload Group Stats','Avg Disk msec/Write','internal','Disk msec/Write Base ')
			,(0,'Workload Group Stats','Blocked tasks','internal',NULL)
			,(0,'Workload Group Stats','CPU delayed %','internal','CPU delayed % base ')
			,(0,'Workload Group Stats','CPU delayed % base','internal',NULL)
			,(0,'Workload Group Stats','CPU effective %','internal','CPU effective % base ')
			,(0,'Workload Group Stats','CPU effective % base','internal',NULL)
			,(0,'Workload Group Stats','CPU usage %','internal','CPU usage % base ')
			,(0,'Workload Group Stats','CPU usage % base','internal',NULL)
			,(0,'Workload Group Stats','CPU violated %','internal',NULL)
			,(0,'Workload Group Stats','Disk Read Bytes/sec','internal',NULL)
			,(0,'Workload Group Stats','Disk Reads/sec','internal',NULL)
			,(0,'Workload Group Stats','Disk Violations/sec','internal',NULL)
			,(0,'Workload Group Stats','Disk Write Bytes/sec','internal',NULL)
			,(0,'Workload Group Stats','Disk Writes/sec','internal',NULL)
			,(0,'Workload Group Stats','Max request cpu time (ms)','internal',NULL)
			,(0,'Workload Group Stats','Max request memory grant (KB)','internal',NULL)
			,(0,'Workload Group Stats','Query optimizations/sec','internal',NULL)
			,(0,'Workload Group Stats','Queued requests','internal',NULL)
			,(0,'Workload Group Stats','Reduced memory grants/sec','internal',NULL)
			,(0,'Workload Group Stats','Requests completed/sec','internal',NULL)
			,(0,'Workload Group Stats','Suboptimal plans/sec','internal',NULL)
			,(0,'Workload Group Stats','Disk msec/Read Base','internal',NULL)
			,(0,'Workload Group Stats','Disk msec/Write Base','internal',NULL)
			,(1,'Win32_PerfFormattedData_PerfOS_Processor','Processor Time %','SQL',NULL)
			,(1,'Win32_PerfFormattedData_PerfOS_Processor','Idle Time %','SQL',NULL)
			,(1,'Win32_PerfFormattedData_PerfOS_Processor','Processor Time %','System',NULL)

	end
go

if object_id('[dbo].[sql_perf_mon_config_wait_stats]') is null
	begin
		create table [dbo].[sql_perf_mon_config_wait_stats](
				[category_name] [nvarchar](40) not null,
				[wait_type] [nvarchar](45) primary key not null,
				[ignore] [bit] not null
		) ;

		-- insert wait types
		insert into [dbo].[sql_perf_mon_config_wait_stats]
		values
			(N'Backup', N'BACKUP', 0)
			,(N'Backup', N'BACKUP_CLIENTLOCK', 0)
			,(N'Backup', N'BACKUP_OPERATOR', 0)
			,(N'Backup', N'BACKUPBUFFER', 0)
			,(N'Backup', N'BACKUPIO', 0)
			,(N'Backup', N'BACKUPTHREAD', 0)
			,(N'Backup', N'DISKIO_SUSPEND', 0)
			,(N'Buffer I/O', N'ASYNC_DISKPOOL_LOCK', 0)
			,(N'Buffer I/O', N'ASYNC_IO_COMPLETION', 0)
			,(N'Buffer I/O', N'FCB_REPLICA_READ', 0)
			,(N'Buffer I/O', N'FCB_REPLICA_WRITE', 0)
			,(N'Buffer I/O', N'IO_COMPLETION', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_DT', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_EX', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_KP', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_NL', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_SH', 0)
			,(N'Buffer I/O', N'PAGEIOLATCH_UP', 0)
			,(N'Buffer I/O', N'REPLICA_WRITES', 0)
			,(N'Buffer Latch', N'PAGELATCH_DT', 0)
			,(N'Buffer Latch', N'PAGELATCH_EX', 0)
			,(N'Buffer Latch', N'PAGELATCH_KP', 0)
			,(N'Buffer Latch', N'PAGELATCH_NL', 0)
			,(N'Buffer Latch', N'PAGELATCH_SH', 0)
			,(N'Buffer Latch', N'PAGELATCH_UP', 0)
			,(N'Compilation', N'RESOURCE_SEMAPHORE_MUTEX', 0)
			,(N'Compilation', N'RESOURCE_SEMAPHORE_QUERY_COMPILE', 0)
			,(N'Compilation', N'RESOURCE_SEMAPHORE_SMALL_QUERY', 0)
			,(N'Full Text Search', N'MSSEARCH', 0)
			,(N'Full Text Search', N'SOAP_READ', 0)
			,(N'Full Text Search', N'SOAP_WRITE', 0)
			,(N'Idle', N'SERVER_IDLE_CHECK', 1)
			,(N'Idle', N'ONDEMAND_TASK_QUEUE', 1)
			,(N'Idle', N'SNI_HTTP_ACCEPT', 1)
			,(N'Idle', N'SLEEP_BPOOL_FLUSH', 1)
			,(N'Idle', N'SLEEP_DBSTARTUP', 1)
			,(N'Idle', N'SLEEP_DCOMSTARTUP', 1)
			,(N'Idle', N'SLEEP_MSDBSTARTUP', 1)
			,(N'Idle', N'SLEEP_SYSTEMTASK', 1)
			,(N'Idle', N'SLEEP_TASK', 1)
			,(N'Idle', N'SLEEP_TEMPDBSTARTUP', 1)
			,(N'Idle', N'WAIT_FOR_RESULTS', 1)
			,(N'Idle', N'WAITFOR_TASKSHUTDOWN', 1)
			,(N'Idle', N'SQLTRACE_BUFFER_FLUSH', 1)
			,(N'Idle', N'TRACEWRITE', 1)
			,(N'Idle', N'XE_DISPATCHER_WAIT', 1)
			,(N'Idle', N'XE_TIMER_EVENT', 1)
			,(N'Idle', N'REQUEST_FOR_DEADLOCK_SEARCH', 1)
			,(N'Idle', N'RESOURCE_QUEUE', 1)
			,(N'Idle', N'LOGMGR_QUEUE', 1)
			,(N'Idle', N'KSOURCE_WAKEUP', 1)
			,(N'Idle', N'LAZYWRITER_SLEEP', 1)
			,(N'Idle', N'BROKER_EVENTHANDLER', 1)
			,(N'Idle', N'BROKER_TRANSMITTER', 1)
			,(N'Idle', N'CHECKPOINT_QUEUE', 1)
			,(N'Idle', N'CHKPT', 1)
			,(N'Idle', N'BROKER_RECEIVE_WAITFOR', 1)
			,(N'Latch', N'DEADLOCK_ENUM_MUTEX', 0)
			,(N'Latch', N'LATCH_DT', 0)
			,(N'Latch', N'LATCH_EX', 0)
			,(N'Latch', N'LATCH_KP', 0)
			,(N'Latch', N'LATCH_NL', 0)
			,(N'Latch', N'LATCH_SH', 0)
			,(N'Latch', N'LATCH_UP', 0)
			,(N'Latch', N'INDEX_USAGE_STATS_MUTEX', 0)
			,(N'Latch', N'VIEW_DEFINITION_MUTEX', 0)
			,(N'Lock', N'LCK_M_BU', 0)
			,(N'Lock', N'LCK_M_IS', 0)
			,(N'Lock', N'LCK_M_IU', 0)
			,(N'Lock', N'LCK_M_IX', 0)
			,(N'Lock', N'LCK_M_RIn_NL', 0)
			,(N'Lock', N'LCK_M_RIn_S', 0)
			,(N'Lock', N'LCK_M_RIn_U', 0)
			,(N'Lock', N'LCK_M_RIn_X', 0)
			,(N'Lock', N'LCK_M_RS_S', 0)
			,(N'Lock', N'LCK_M_RS_U', 0)
			,(N'Lock', N'LCK_M_RX_S', 0)
			,(N'Lock', N'LCK_M_RX_U', 0)
			,(N'Lock', N'LCK_M_RX_X', 0)
			,(N'Lock', N'LCK_M_S', 0)
			,(N'Lock', N'LCK_M_SCH_M', 0)
			,(N'Lock', N'LCK_M_SCH_S', 0)
			,(N'Lock', N'LCK_M_SIU', 0)
			,(N'Lock', N'LCK_M_SIX', 0)
			,(N'Lock', N'LCK_M_U', 0)
			,(N'Lock', N'LCK_M_UIX', 0)
			,(N'Lock', N'LCK_M_X', 0)
			,(N'Logging', N'LOGBUFFER', 0)
			,(N'Logging', N'LOGMGR', 0)
			,(N'Logging', N'LOGMGR_FLUSH', 0)
			,(N'Logging', N'LOGMGR_RESERVE_APPEND', 0)
			,(N'Logging', N'WRITELOG', 0)
			,(N'Memory', N'UTIL_PAGE_ALLOC', 0)
			,(N'Memory', N'SOS_RESERVEDMEMBLOCKLIST', 0)
			,(N'Memory', N'SOS_VIRTUALMEMORY_LOW', 0)
			,(N'Memory', N'LOWFAIL_MEMMGR_QUEUE', 0)
			,(N'Memory', N'RESOURCE_SEMAPHORE', 0)
			,(N'Memory', N'CMEMTHREAD', 0)
			,(N'Network I/O', N'NET_WAITFOR_PACKET', 0)
			,(N'Network I/O', N'OLEDB', 0)
			,(N'Network I/O', N'MSQL_DQ', 0)
			,(N'Network I/O', N'DTC_STATE', 0)
			,(N'Network I/O', N'DBMIRROR_SEND', 0)
			,(N'Network I/O', N'ASYNC_NETWORK_IO', 0)
			,(N'Other', N'ABR', 0)
			,(N'Other', N'BROKER_REGISTERALLENDPOINTS', 0)
			,(N'Other', N'BROKER_SHUTDOWN', 0)
			,(N'Other', N'BROKER_TASK_STOP', 1)
			,(N'Other', N'BAD_PAGE_PROCESS', 0)
			,(N'Other', N'BROKER_CONNECTION_RECEIVE_TASK', 0)
			,(N'Other', N'BROKER_ENDPOINT_STATE_MUTEX', 0)
			,(N'Other', N'BUILTIN_HASHKEY_MUTEX', 0)
			,(N'Other', N'CHECK_PRINT_RECORD', 0)
			,(N'Other', N'BROKER_INIT', 0)
			,(N'Other', N'BROKER_MASTERSTART', 0)
			,(N'Other', N'CURSOR', 0)
			,(N'Other', N'CURSOR_ASYNC', 0)
			,(N'Other', N'DBMIRROR_WORKER_QUEUE', 0)
			,(N'Other', N'DBMIRRORING_CMD', 0)
			,(N'Other', N'DBTABLE', 0)
			,(N'Other', N'DAC_INIT', 0)
			,(N'Other', N'DBCC_COLUMN_TRANSLATION_CACHE', 0)
			,(N'Other', N'DBMIRROR_DBM_EVENT', 0)
			,(N'Other', N'DBMIRROR_DBM_MUTEX', 0)
			,(N'Other', N'DBMIRROR_EVENTS_QUEUE', 0)
			,(N'Other', N'DEADLOCK_TASK_SEARCH', 0)
			,(N'Other', N'DEBUG', 0)
			,(N'Other', N'DISABLE_VERSIONING', 0)
			,(N'Other', N'DLL_LOADING_MUTEX', 0)
			,(N'Other', N'DROPTEMP', 0)
			,(N'Other', N'DUMP_LOG_COORDINATOR', 0)
			,(N'Other', N'DUMP_LOG_COORDINATOR_QUEUE', 0)
			,(N'Other', N'DUMPTRIGGER', 0)
			,(N'Other', N'EC', 0)
			,(N'Other', N'EE_PMOLOCK', 0)
			,(N'Other', N'EE_SPECPROC_MAP_INIT', 0)
			,(N'Other', N'ENABLE_VERSIONING', 0)
			,(N'Other', N'ERROR_REPORTING_MANAGER', 0)
			,(N'Other', N'FSAGENT', 1)
			,(N'Other', N'FT_RESTART_CRAWL', 0)
			,(N'Other', N'FT_RESUME_CRAWL', 0)
			,(N'Other', N'FULLTEXT GATHERER', 0)
			,(N'Other', N'GUARDIAN', 0)
			,(N'Other', N'HTTP_ENDPOINT_COLLCREATE', 0)
			,(N'Other', N'HTTP_ENUMERATION', 0)
			,(N'Other', N'HTTP_START', 0)
			,(N'Other', N'IMP_IMPORT_MUTEX', 0)
			,(N'Other', N'IMPPROV_IOWAIT', 0)
			,(N'Other', N'EXECUTION_PIPE_EVENT_INTERNAL', 0)
			,(N'Other', N'FAILPOINT', 0)
			,(N'Other', N'INTERNAL_TESTING', 0)
			,(N'Other', N'IO_AUDIT_MUTEX', 0)
			,(N'Other', N'KTM_ENLISTMENT', 0)
			,(N'Other', N'KTM_RECOVERY_MANAGER', 0)
			,(N'Other', N'KTM_RECOVERY_RESOLUTION', 0)
			,(N'Other', N'MSQL_SYNC_PIPE', 0)
			,(N'Other', N'MIRROR_SEND_MESSAGE', 0)
			,(N'Other', N'MISCELLANEOUS', 0)
			,(N'Other', N'MSQL_XP', 0)
			,(N'Other', N'REQUEST_DISPENSER_PAUSE', 0)
			,(N'Other', N'PARALLEL_BACKUP_QUEUE', 0)
			,(N'Other', N'PRINT_ROLLBACK_PROGRESS', 0)
			,(N'Other', N'QNMANAGER_ACQUIRE', 0)
			,(N'Other', N'QPJOB_KILL', 0)
			,(N'Other', N'QPJOB_WAITFOR_ABORT', 0)
			,(N'Other', N'QRY_MEM_GRANT_INFO_MUTEX', 0)
			,(N'Other', N'QUERY_ERRHDL_SERVICE_DONE', 0)
			,(N'Other', N'QUERY_EXECUTION_INDEX_SORT_EVENT_OPEN', 0)
			,(N'Other', N'QUERY_NOTIFICATION_MGR_MUTEX', 0)
			,(N'Other', N'QUERY_NOTIFICATION_SUBSCRIPTION_MUTEX', 0)
			,(N'Other', N'QUERY_NOTIFICATION_TABLE_MGR_MUTEX', 0)
			,(N'Other', N'QUERY_NOTIFICATION_UNITTEST_MUTEX', 0)
			,(N'Other', N'QUERY_OPTIMIZER_PRINT_MUTEX', 0)
			,(N'Other', N'QUERY_REMOTE_BRICKS_DONE', 0)
			,(N'Other', N'QUERY_TRACEOUT', 0)
			,(N'Other', N'RECOVER_CHANGEDB', 0)
			,(N'Other', N'REPL_CACHE_ACCESS', 0)
			,(N'Other', N'REPL_SCHEMA_ACCESS', 0)
			,(N'Other', N'SOSHOST_EVENT', 0)
			,(N'Other', N'SOSHOST_INTERNAL', 0)
			,(N'Other', N'SOSHOST_MUTEX', 0)
			,(N'Other', N'SOSHOST_RWLOCK', 0)
			,(N'Other', N'SOSHOST_SEMAPHORE', 0)
			,(N'Other', N'SOSHOST_SLEEP', 0)
			,(N'Other', N'SOSHOST_TRACELOCK', 0)
			,(N'Other', N'SOSHOST_WAITFORDONE', 0)
			,(N'Other', N'SHUTDOWN', 0)
			,(N'Other', N'SOS_CALLBACK_REMOVAL', 0)
			,(N'Other', N'SOS_DISPATCHER_MUTEX', 0)
			,(N'Other', N'SOS_LOCALALLOCATORLIST', 0)
			,(N'Other', N'SOS_OBJECT_STORE_DESTROY_MUTEX', 0)
			,(N'Other', N'SOS_PROCESS_AFFINITY_MUTEX', 0)
			,(N'Other', N'SNI_CRITICAL_SECTION', 0)
			,(N'Other', N'SNI_HTTP_WAITFOR_0_DISCON', 0)
			,(N'Other', N'SNI_LISTENER_ACCESS', 0)
			,(N'Other', N'SNI_TASK_COMPLETION', 0)
			,(N'Other', N'SEC_DROP_TEMP_KEY', 0)
			,(N'Other', N'SEQUENTIAL_GUID', 0)
			,(N'Other', N'VIA_ACCEPT', 0)
			,(N'Other', N'SOS_STACKSTORE_INIT_MUTEX', 0)
			,(N'Other', N'SOS_SYNC_TASK_ENQUEUE_EVENT', 0)
			,(N'Other', N'SQLSORT_NORMMUTEX', 0)
			,(N'Other', N'SQLSORT_SORTMUTEX', 0)
			,(N'Other', N'WAITSTAT_MUTEX', 0)
			,(N'Other', N'WCC', 0)
			,(N'Other', N'WORKTBL_DROP', 0)
			,(N'Other', N'SQLTRACE_LOCK', 0)
			,(N'Other', N'SQLTRACE_SHUTDOWN', 0)
			,(N'Other', N'SQLTRACE_WAIT_ENTRIES', 0)
			,(N'Other', N'SRVPROC_SHUTDOWN', 0)
			,(N'Other', N'TEMPOBJ', 0)
			,(N'Other', N'THREADPOOL', 1)
			,(N'Other', N'TIMEPRIV_TIMEPERIOD', 0)
			,(N'Other', N'XE_TIMER_MUTEX', 0)
			,(N'Other', N'XE_TIMER_TASK_DONE', 0)
			,(N'Other', N'XE_BUFFERMGR_ALLPROCECESSED_EVENT', 0)
			,(N'Other', N'XE_BUFFERMGR_FREEBUF_EVENT', 0)
			,(N'Other', N'XE_DISPATCHER_JOIN', 0)
			,(N'Other', N'XE_MODULEMGR_SYNC', 0)
			,(N'Other', N'XE_OLS_LOCK', 0)
			,(N'Other', N'XE_SERVICES_MUTEX', 0)
			,(N'Other', N'XE_SESSION_CREATE_SYNC', 0)
			,(N'Other', N'XE_SESSION_SYNC', 0)
			,(N'Other', N'XE_STM_CREATE', 0)
			,(N'Parallelism', N'EXCHANGE', 1)
			,(N'Parallelism', N'EXECSYNC', 1)
			,(N'Parallelism', N'CXPACKET', 1)
			,(N'SQLCLR', N'CLR_AUTO_EVENT', 1)
			,(N'SQLCLR', N'CLR_CRST', 0)
			,(N'SQLCLR', N'CLR_JOIN', 0)
			,(N'SQLCLR', N'CLR_MANUAL_EVENT', 1)
			,(N'SQLCLR', N'CLR_MEMORY_SPY', 0)
			,(N'SQLCLR', N'CLR_MONITOR', 0)
			,(N'SQLCLR', N'CLR_RWLOCK_READER', 0)
			,(N'SQLCLR', N'CLR_RWLOCK_WRITER', 0)
			,(N'SQLCLR', N'CLR_SEMAPHORE', 0)
			,(N'SQLCLR', N'CLR_TASK_START', 0)
			,(N'SQLCLR', N'CLRHOST_STATE_ACCESS', 0)
			,(N'SQLCLR', N'ASSEMBLY_LOAD', 0)
			,(N'SQLCLR', N'FS_GARBAGE_COLLECTOR_SHUTDOWN', 0)
			,(N'SQLCLR', N'SQLCLR_APPDOMAIN', 0)
			,(N'SQLCLR', N'SQLCLR_ASSEMBLY', 0)
			,(N'SQLCLR', N'SQLCLR_DEADLOCK_DETECTION', 0)
			,(N'SQLCLR', N'SQLCLR_QUANTUM_PUNISHMENT', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_DT', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_EX', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_KP', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_NL', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_SH', 0)
			,(N'Transaction', N'TRAN_MARKLATCH_UP', 0)
			,(N'Transaction', N'TRANSACTION_MUTEX', 0)
			,(N'Transaction', N'XACT_OWN_TRANSACTION', 0)
			,(N'Transaction', N'XACT_RECLAIM_SESSION', 0)
			,(N'Transaction', N'XACTLOCKINFO', 0)
			,(N'Transaction', N'XACTWORKSPACE_MUTEX', 0)
			,(N'Transaction', N'DTC_TMDOWN_REQUEST', 0)
			,(N'Transaction', N'DTC_WAITFOR_OUTCOME', 0)
			,(N'Transaction', N'MSQL_XACT_MGR_MUTEX', 0)
			,(N'Transaction', N'MSQL_XACT_MUTEX', 0)
			,(N'Transaction', N'DTC', 0)
			,(N'Transaction', N'DTC_ABORT_REQUEST', 0)
			,(N'Transaction', N'DTC_RESOLVE', 0)
			,(N'User Waits', N'WAITFOR', 1)
			,(N'Mirroring', N'DBMIRROR%', 1)
			,(N'Availability Groups', N'HADR%', 1)
			,(N'Replication', N'REPL%', 1);


		create nonclustered index idx_wait_stats on [dbo].[sql_perf_mon_config_wait_stats](wait_type)
	end
go

------------------------------------------------------------------------------
-- end of the 2 configuration queries
------------------------------------------------------------------------------

------------------------------------------------------------------------------
-- SETUP TIME WINDOW OF THE REPORT IN MINUTES
-- (ORIGINAL EXAMPLE 5 AND 15 MINUTES)
------------------------------------------------------------------------------

-- available time intervals. This is NOT how often data is collected
if object_id('[dbo].[sql_perf_mon_config_report_time_interval]') is null
	begin
		create table [dbo].[sql_perf_mon_config_report_time_interval] (
			[report_time_interval_minutes] tinyint
			)
		insert into [dbo].[sql_perf_mon_config_report_time_interval]([report_time_interval_minutes])
		select 5
		-- union
		-- select 15
	end

-- create placeholder view
if object_id('[dbo].[vw_sql_perf_mon_time_intervals]') is null
	exec ('create view [dbo].[vw_sql_perf_mon_time_intervals] as select dummy=''placeholder''')
go

-- create time intervals view
-- used expecially when we have cumulative metrics and we need to subtract
-- values from 2 different snapshots
alter view [dbo].[vw_sql_perf_mon_time_intervals] as
select
		[spapshot_interval_start]
	,	[snapshot_interval_end] = dateadd(mi, [report_time_interval_minutes], [spapshot_interval_start])
	,	[first_snapshot_time]	= MIN(i.snapshot_time)
	,	[last_snapshot_time]	= MAX(i.snapshot_time)
	,	[snapshot_age_hours]	= datediff(hour,dateadd(mi, [report_time_interval_minutes], [spapshot_interval_start]),GETDATE())
	,	[report_time_interval_minutes]
from [dbo].[sql_perf_mon_snapshot_header] s
inner join (
	select
			[snapshot_time]
		 ,	[spapshot_interval_start] = convert(datetime,dateadd(mi,(datediff(mi,0, [snapshot_time])/ ti.[report_time_interval_minutes]) * ti.[report_time_interval_minutes],0))
		 ,	ti.[report_time_interval_minutes]
	from [dbo].[sql_perf_mon_snapshot_header]
	cross apply (
		select top 5 report_time_interval_minutes
		from [dbo].[sql_perf_mon_config_report_time_interval]
		order by report_time_interval_minutes
		) ti
	) i
	on s.snapshot_time > [spapshot_interval_start]
	and s.snapshot_time <= dateadd(mi, [report_time_interval_minutes], [spapshot_interval_start])
group by [spapshot_interval_start], [report_time_interval_minutes]
go

-- create view to categorize waits
if object_id('[dbo].[vw_sql_perf_mon_wait_stats_categorised]') is null
	exec ('create view [dbo].[vw_sql_perf_mon_wait_stats_categorised] as select dummy=''placeholder''')
go

alter view [dbo].[vw_sql_perf_mon_wait_stats_categorised] as
	select ws.* , category_name = case when ws.wait_type like 'PREEMPTIVE%' then 'PREEMPTIVE' else wt.category_name end , wt.ignore
	from [dbo].[sql_perf_mon_wait_stats] ws
	left join [dbo].[sql_perf_mon_config_wait_stats] wt
	on ws.wait_type LIKE wt.wait_type
go

if @@trancount > 0
	commit
